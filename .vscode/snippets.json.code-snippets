{
	// Place your backend-server-01 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  /*
  {
    "key": "ctrl+g ctrl+r",
    "command": "extension.randomHexColor"
  },
  {
    "key": "ctrl+i",
    "command": "extension.insertFilename",
    "when": "editorTextFocus"
  }
  */
  "Send log debug to LoggerManager block": {
	  //"scope": "javascript,typescript",
	  "prefix": "mlogMark",
	  "body": [
	 		"LoggerManager.mark( \"change_me\" );",
	 		"LoggerManager.log( $2 );"
	  ],
	  "description": "Send log debug to LoggerManager block"
	},
  "Send log debug to LoggerManager one line": {
	  //"scope": "javascript,typescript",
	  "prefix": "mlog",
	  "body": [
	 		"LoggerManager.markLog( \"change_me\", $2 );",
	  ],
	  "description": "Send log debug to LoggerManager"
  },
  "Send log error to LoggerManager one line": {
	  //"scope": "javascript,typescript",
	  "prefix": "mlogError",
	  "body": [
	 		"LoggerManager.markError( \"change_me\", error );",
	  ],
	  "description": "Send log error to LoggerManager"
	}
}
